{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\instructor\\\\course\\\\create.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport InstructorRoute from \"../../../components/routes/InstructorRoute\";\nimport CourseCreateForm from \"../../../components/forms/CourseCreateForm\";\nimport Resizer from \"react-image-file-resizer\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport user from \"../../../../server/models/user\";\n\nconst CourseCreate = () => {\n  // state\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: \"\",\n    description: \"\",\n    price: \"9.99\",\n    uploading: false,\n    paid: true,\n    category: \"\",\n    loading: false\n  });\n  const {\n    0: image,\n    1: setImage\n  } = useState({});\n  const {\n    0: preview,\n    1: setPreview\n  } = useState(\"\");\n  const {\n    0: uploadButtonText,\n    1: setUploadButtonText\n  } = useState(\"Upload Image\"); // router\n\n  const router = useRouter();\n\n  const handleChange = e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleImage = e => {\n    let file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n    setUploadButtonText(file.name);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    })); // resize\n\n    Resizer.imageFileResizer(file, 720, 500, \"JPEG\", 100, 0, async uri => {\n      try {\n        let {\n          data\n        } = await axios.post(\"/api/course/upload-image\", {\n          image: uri\n        });\n        console.log(\"IMAGE UPLOADED\", data); // set image in the state\n\n        setImage(data);\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false\n        }));\n      } catch (err) {\n        console.log(err);\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false\n        }));\n        toast(\"Image upload failed. Try later.\");\n      }\n    });\n  };\n\n  const handleImageRemove = async () => {\n    try {\n      // console.log(values);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: true\n      }));\n      const res = await axios.post(\"/api/course/remove-image\", {\n        image\n      });\n      setImage({});\n      setPreview(\"\");\n      setUploadButtonText(\"Upload Image\");\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n    } catch (err) {\n      console.log(err);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      toast(\"Image upload failed. Try later.\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // console.log(values);\n      const {\n        data\n      } = await axios.post(\"/api/course\", _objectSpread(_objectSpread({}, values), {}, {\n        image\n      }));\n      toast(\"Great! Now you can start adding lessons\");\n      router.push(\"/instructor\");\n    } catch (err) {\n      toast(err.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InstructorRoute, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"jumbotron text-center square\",\n      children: \"Create Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-3 pb-3\",\n      children: /*#__PURE__*/_jsxDEV(CourseCreateForm, {\n        handleSubmit: handleSubmit,\n        handleImage: handleImage,\n        handleChange: handleChange,\n        values: values,\n        setValues: setValues,\n        preview: preview,\n        uploadButtonText: uploadButtonText,\n        handleImageRemove: handleImageRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(values, null, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(image, null, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CourseCreate;","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/instructor/course/create.js"],"names":["useState","axios","InstructorRoute","CourseCreateForm","Resizer","toast","useRouter","user","CourseCreate","values","setValues","name","description","price","uploading","paid","category","loading","image","setImage","preview","setPreview","uploadButtonText","setUploadButtonText","router","handleChange","e","target","value","handleImage","file","files","window","URL","createObjectURL","imageFileResizer","uri","data","post","console","log","err","handleImageRemove","res","handleSubmit","preventDefault","push","response","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport InstructorRoute from \"../../../components/routes/InstructorRoute\";\nimport CourseCreateForm from \"../../../components/forms/CourseCreateForm\";\nimport Resizer from \"react-image-file-resizer\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport user from \"../../../../server/models/user\";\n\nconst CourseCreate = () => {\n  // state\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"9.99\",\n    uploading: false,\n    paid: true,\n    category: \"\",\n    loading: false,\n  });\n  const [image, setImage] = useState({});\n  const [preview, setPreview] = useState(\"\");\n  const [uploadButtonText, setUploadButtonText] = useState(\"Upload Image\");\n\n  // router\n  const router = useRouter();\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleImage = (e) => {\n    let file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n    setUploadButtonText(file.name);\n    setValues({ ...values, loading: true });\n    // resize\n    Resizer.imageFileResizer(file, 720, 500, \"JPEG\", 100, 0, async (uri) => {\n      try {\n        let { data } = await axios.post(\"/api/course/upload-image\", {\n          image: uri,\n        });\n        console.log(\"IMAGE UPLOADED\", data);\n        // set image in the state\n        setImage(data);\n        setValues({ ...values, loading: false });\n      } catch (err) {\n        console.log(err);\n        setValues({ ...values, loading: false });\n        toast(\"Image upload failed. Try later.\");\n      }\n    });\n  };\n\n  const handleImageRemove = async () => {\n    try {\n      // console.log(values);\n      setValues({ ...values, loading: true });\n      const res = await axios.post(\"/api/course/remove-image\", { image });\n      setImage({});\n      setPreview(\"\");\n      setUploadButtonText(\"Upload Image\");\n      setValues({ ...values, loading: false });\n    } catch (err) {\n      console.log(err);\n      setValues({ ...values, loading: false });\n      toast(\"Image upload failed. Try later.\");\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // console.log(values);\n      const { data } = await axios.post(\"/api/course\", {\n        ...values,\n        image,\n      });\n      toast(\"Great! Now you can start adding lessons\");\n      router.push(\"/instructor\");\n    } catch (err) {\n      toast(err.response.data);\n    }\n  };\n\n  return (\n    <InstructorRoute>\n      <h1 className=\"jumbotron text-center square\">Create Course</h1>\n      <div className=\"pt-3 pb-3\">\n        <CourseCreateForm\n          handleSubmit={handleSubmit}\n          handleImage={handleImage}\n          handleChange={handleChange}\n          values={values}\n          setValues={setValues}\n          preview={preview}\n          uploadButtonText={uploadButtonText}\n          handleImageRemove={handleImageRemove}\n        />\n      </div>\n      <pre>{JSON.stringify(values, null, 4)}</pre>\n      <hr />\n      <pre>{JSON.stringify(image, null, 4)}</pre>\n    </InstructorRoute>\n  );\n};\n\nexport default CourseCreate;\n"]},"metadata":{},"sourceType":"module"}