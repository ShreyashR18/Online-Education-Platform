{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\course\\\\[slug].js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport SingleCourseJumbotron from \"../../components/cards/SingleCourseJumbotron\";\nimport PreviewModal from \"../../components/modal/PreviewModal\";\nimport SingleCourseLessons from \"../../components/cards/SingleCourseLessons\";\nimport { Context } from \"../../context\";\nimport { toast } from \"react-toastify\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst SingleCourse = ({\n  course\n}) => {\n  // state\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: preview,\n    1: setPreview\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: enrolled,\n    1: setEnrolled\n  } = useState({}); // context\n\n  const {\n    state: {\n      user\n    }\n  } = useContext(Context);\n  useEffect(() => {\n    if (user && course) checkEnrollment();\n  }, [user, course]);\n\n  const checkEnrollment = async () => {\n    const {\n      data\n    } = await axios.get(`/api/check-enrollment/${course._id}`);\n    console.log(\"CHECK ENROLLMENT\", data);\n    setEnrolled(data);\n  };\n\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n\n  const handlePaidEnrollment = async () => {\n    // console.log(\"handle paid enrollment\");\n    try {\n      setLoading(true); // check if user is logged in\n\n      if (!user) router.push(\"/login\"); // check if already enrolled\n\n      if (enrolled.status) return router.push(`/user/course/${enrolled.course.slug}`);\n      const {\n        data\n      } = await axios.post(`/api/paid-enrollment/${course._id}`);\n      const stripe = await loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n      stripe.redirectToCheckout({\n        sessionId: data\n      });\n    } catch (err) {\n      toast(\"Enrollment failed, try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const handleFreeEnrollment = async e => {\n    // console.log(\"handle free enrollment\");\n    e.preventDefault();\n\n    try {\n      // check if user is logged in\n      if (!user) router.push(\"/login\"); // check if already enrolled\n\n      if (enrolled.status) return router.push(`/user/course/${enrolled.course.slug}`);\n      setLoading(true);\n      const {\n        data\n      } = await axios.post(`/api/free-enrollment/${course._id}`);\n      toast(data.message);\n      setLoading(false);\n      router.push(`/user/course/${data.course.slug}`);\n    } catch (err) {\n      toast(\"Enrollment failed. Try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SingleCourseJumbotron, {\n      course: course,\n      showModal: showModal,\n      setShowModal: setShowModal,\n      preview: preview,\n      setPreview: setPreview,\n      user: user,\n      loading: loading,\n      handlePaidEnrollment: handlePaidEnrollment,\n      handleFreeEnrollment: handleFreeEnrollment,\n      enrolled: enrolled,\n      setEnrolled: setEnrolled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreviewModal, {\n      showModal: showModal,\n      setShowModal: setShowModal,\n      preview: preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), course.lessons && /*#__PURE__*/_jsxDEV(SingleCourseLessons, {\n      lessons: course.lessons,\n      setPreview: setPreview,\n      showModal: showModal,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  const {\n    data\n  } = await axios.get(`${process.env.API}/course/${query.slug}`);\n  return {\n    props: {\n      course: data\n    }\n  };\n}\nexport default SingleCourse;","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/course/[slug].js"],"names":["useState","useEffect","useContext","axios","useRouter","SingleCourseJumbotron","PreviewModal","SingleCourseLessons","Context","toast","loadStripe","SingleCourse","course","showModal","setShowModal","preview","setPreview","loading","setLoading","enrolled","setEnrolled","state","user","checkEnrollment","data","get","_id","console","log","router","slug","query","handlePaidEnrollment","push","status","post","stripe","process","env","NEXT_PUBLIC_STRIPE_KEY","redirectToCheckout","sessionId","err","handleFreeEnrollment","e","preventDefault","message","lessons","getServerSideProps","API","props"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,qBAAP,MAAkC,8CAAlC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACnC;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACe,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACiB,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACmB,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,EAAD,CAAxC,CALmC,CAMnC;;AACA,QAAM;AACJqB,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFpB,UAAU,CAACM,OAAD,CAFd;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,IAAI,IAAIV,MAAZ,EAAoBW,eAAe;AACpC,GAFQ,EAEN,CAACD,IAAD,EAAOV,MAAP,CAFM,CAAT;;AAIA,QAAMW,eAAe,GAAG,YAAY;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMrB,KAAK,CAACsB,GAAN,CAAW,yBAAwBb,MAAM,CAACc,GAAI,EAA9C,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,IAAhC;AACAJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AACD,GAJD;;AAMA,QAAMK,MAAM,GAAGzB,SAAS,EAAxB;AACA,QAAM;AAAE0B,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;;AAEA,QAAMC,oBAAoB,GAAG,YAAY;AACvC;AACA,QAAI;AACFd,MAAAA,UAAU,CAAC,IAAD,CAAV,CADE,CAEF;;AACA,UAAI,CAACI,IAAL,EAAWO,MAAM,CAACI,IAAP,CAAY,QAAZ,EAHT,CAIF;;AACA,UAAId,QAAQ,CAACe,MAAb,EACE,OAAOL,MAAM,CAACI,IAAP,CAAa,gBAAed,QAAQ,CAACP,MAAT,CAAgBkB,IAAK,EAAjD,CAAP;AACF,YAAM;AAAEN,QAAAA;AAAF,UAAW,MAAMrB,KAAK,CAACgC,IAAN,CAAY,wBAAuBvB,MAAM,CAACc,GAAI,EAA9C,CAAvB;AACA,YAAMU,MAAM,GAAG,MAAM1B,UAAU,CAAC2B,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA/B;AACAH,MAAAA,MAAM,CAACI,kBAAP,CAA0B;AAAEC,QAAAA,SAAS,EAAEjB;AAAb,OAA1B;AACD,KAVD,CAUE,OAAOkB,GAAP,EAAY;AACZjC,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACAxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAjBD;;AAmBA,QAAMyB,oBAAoB,GAAG,MAAOC,CAAP,IAAa;AACxC;AACAA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF;AACA,UAAI,CAACvB,IAAL,EAAWO,MAAM,CAACI,IAAP,CAAY,QAAZ,EAFT,CAGF;;AACA,UAAId,QAAQ,CAACe,MAAb,EACE,OAAOL,MAAM,CAACI,IAAP,CAAa,gBAAed,QAAQ,CAACP,MAAT,CAAgBkB,IAAK,EAAjD,CAAP;AACFZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAW,MAAMrB,KAAK,CAACgC,IAAN,CAAY,wBAAuBvB,MAAM,CAACc,GAAI,EAA9C,CAAvB;AACAjB,MAAAA,KAAK,CAACe,IAAI,CAACsB,OAAN,CAAL;AACA5B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAW,MAAAA,MAAM,CAACI,IAAP,CAAa,gBAAeT,IAAI,CAACZ,MAAL,CAAYkB,IAAK,EAA7C;AACD,KAXD,CAWE,OAAOY,GAAP,EAAY;AACZjC,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACAxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAA,4BAEE,QAAC,qBAAD;AACE,MAAA,MAAM,EAAEN,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,UAAU,EAAEC,UALd;AAME,MAAA,IAAI,EAAEM,IANR;AAOE,MAAA,OAAO,EAAEL,OAPX;AAQE,MAAA,oBAAoB,EAAEe,oBARxB;AASE,MAAA,oBAAoB,EAAEW,oBATxB;AAUE,MAAA,QAAQ,EAAExB,QAVZ;AAWE,MAAA,WAAW,EAAEC;AAXf;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE,QAAC,YAAD;AACE,MAAA,SAAS,EAAEP,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,YAhBF,EAsBGH,MAAM,CAACmC,OAAP,iBACC,QAAC,mBAAD;AACE,MAAA,OAAO,EAAEnC,MAAM,CAACmC,OADlB;AAEE,MAAA,UAAU,EAAE/B,UAFd;AAGE,MAAA,SAAS,EAAEH,SAHb;AAIE,MAAA,YAAY,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,kBADF;AAiCD,CAjGD;;AAmGA,OAAO,eAAekC,kBAAf,CAAkC;AAAEjB,EAAAA;AAAF,CAAlC,EAA6C;AAClD,QAAM;AAAEP,IAAAA;AAAF,MAAW,MAAMrB,KAAK,CAACsB,GAAN,CAAW,GAAEY,OAAO,CAACC,GAAR,CAAYW,GAAI,WAAUlB,KAAK,CAACD,IAAK,EAAlD,CAAvB;AACA,SAAO;AACLoB,IAAAA,KAAK,EAAE;AACLtC,MAAAA,MAAM,EAAEY;AADH;AADF,GAAP;AAKD;AAED,eAAeb,YAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport SingleCourseJumbotron from \"../../components/cards/SingleCourseJumbotron\";\nimport PreviewModal from \"../../components/modal/PreviewModal\";\nimport SingleCourseLessons from \"../../components/cards/SingleCourseLessons\";\nimport { Context } from \"../../context\";\nimport { toast } from \"react-toastify\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst SingleCourse = ({ course }) => {\n  // state\n  const [showModal, setShowModal] = useState(false);\n  const [preview, setPreview] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [enrolled, setEnrolled] = useState({});\n  // context\n  const {\n    state: { user },\n  } = useContext(Context);\n\n  useEffect(() => {\n    if (user && course) checkEnrollment();\n  }, [user, course]);\n\n  const checkEnrollment = async () => {\n    const { data } = await axios.get(`/api/check-enrollment/${course._id}`);\n    console.log(\"CHECK ENROLLMENT\", data);\n    setEnrolled(data);\n  };\n\n  const router = useRouter();\n  const { slug } = router.query;\n\n  const handlePaidEnrollment = async () => {\n    // console.log(\"handle paid enrollment\");\n    try {\n      setLoading(true);\n      // check if user is logged in\n      if (!user) router.push(\"/login\");\n      // check if already enrolled\n      if (enrolled.status)\n        return router.push(`/user/course/${enrolled.course.slug}`);\n      const { data } = await axios.post(`/api/paid-enrollment/${course._id}`);\n      const stripe = await loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n      stripe.redirectToCheckout({ sessionId: data });\n    } catch (err) {\n      toast(\"Enrollment failed, try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const handleFreeEnrollment = async (e) => {\n    // console.log(\"handle free enrollment\");\n    e.preventDefault();\n    try {\n      // check if user is logged in\n      if (!user) router.push(\"/login\");\n      // check if already enrolled\n      if (enrolled.status)\n        return router.push(`/user/course/${enrolled.course.slug}`);\n      setLoading(true);\n      const { data } = await axios.post(`/api/free-enrollment/${course._id}`);\n      toast(data.message);\n      setLoading(false);\n      router.push(`/user/course/${data.course.slug}`);\n    } catch (err) {\n      toast(\"Enrollment failed. Try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {/* <pre>{JSON.stringify(course, null, 4)}</pre> */}\n      <SingleCourseJumbotron\n        course={course}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        preview={preview}\n        setPreview={setPreview}\n        user={user}\n        loading={loading}\n        handlePaidEnrollment={handlePaidEnrollment}\n        handleFreeEnrollment={handleFreeEnrollment}\n        enrolled={enrolled}\n        setEnrolled={setEnrolled}\n      />\n\n      <PreviewModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        preview={preview}\n      />\n\n      {course.lessons && (\n        <SingleCourseLessons\n          lessons={course.lessons}\n          setPreview={setPreview}\n          showModal={showModal}\n          setShowModal={setShowModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport async function getServerSideProps({ query }) {\n  const { data } = await axios.get(`${process.env.API}/course/${query.slug}`);\n  return {\n    props: {\n      course: data,\n    },\n  };\n}\n\nexport default SingleCourse;\n"]},"metadata":{},"sourceType":"module"}