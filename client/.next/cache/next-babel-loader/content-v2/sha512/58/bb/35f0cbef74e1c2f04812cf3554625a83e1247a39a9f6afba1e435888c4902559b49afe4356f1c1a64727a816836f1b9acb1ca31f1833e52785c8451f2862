{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\instructor\\\\course\\\\view\\\\[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport InstructorRoute from \"../../../../components/routes/InstructorRoute\";\nimport axios from \"axios\";\nimport { Avatar, Tooltip, Button, Modal, List } from \"antd\";\nimport { EditOutlined, CheckOutlined, UploadOutlined, QuestionOutlined, CloseOutlined, UserSwitchOutlined } from \"@ant-design/icons\";\nimport ReactMarkdown from \"react-markdown\";\nimport AddLessonForm from \"../../../../components/forms/AddLessonForm\";\nimport { toast } from \"react-toastify\";\nimport Item from \"antd/lib/list/Item\";\n\nconst CourseView = () => {\n  const {\n    0: course,\n    1: setCourse\n  } = useState({}); // for lessons\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    title: \"\",\n    content: \"\",\n    video: {}\n  });\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false);\n  const {\n    0: uploadButtonText,\n    1: setUploadButtonText\n  } = useState(\"Upload Video\");\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0); // student count\n\n  const {\n    0: students,\n    1: setStudents\n  } = useState(0);\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  useEffect(() => {\n    loadCourse();\n  }, [slug]);\n  useEffect(() => {\n    course && studentCount();\n  }, [course]);\n\n  const loadCourse = async () => {\n    const {\n      data\n    } = await axios.get(`/api/course/${slug}`);\n    setCourse(data);\n  };\n\n  const studentCount = async () => {\n    const {\n      data\n    } = await axios.post(`/api/instructor/student-count`, {\n      courseId: course._id\n    });\n    console.log(\"STUDENT COUNT => \", data);\n    setStudents(data.length);\n  }; // FUNCTIONS FOR ADD LESSON\n\n\n  const handleAddLesson = async e => {\n    e.preventDefault(); // console.log(values);\n\n    try {\n      const {\n        data\n      } = await axios.post(`/api/course/lesson/${slug}/${course.instructor._id}`, values); // console.log(data)\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        title: \"\",\n        content: \"\",\n        video: {}\n      }));\n      setProgress(0);\n      setUploadButtonText(\"Upload video\");\n      setVisible(false);\n      setCourse(data);\n      toast(\"Lesson added\");\n    } catch (err) {\n      console.log(err);\n      toast(\"Lesson add failed\");\n    }\n  };\n\n  const handleVideo = async e => {\n    try {\n      const file = e.target.files[0];\n      setUploadButtonText(file.name);\n      setUploading(true);\n      const videoData = new FormData();\n      videoData.append(\"video\", file); // save progress bar and send video as form data to backend\n\n      const {\n        data\n      } = await axios.post(`/api/course/video-upload/${course.instructor._id}`, videoData, {\n        onUploadProgress: e => {\n          setProgress(Math.round(100 * e.loaded / e.total));\n        }\n      }); // once response is received\n\n      console.log(data);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        video: data\n      }));\n      setUploading(false);\n    } catch (err) {\n      console.log(err);\n      setUploading(false);\n      toast(\"Video upload failed\");\n    }\n  };\n\n  const handleVideoRemove = async () => {\n    try {\n      setUploading(true);\n      const {\n        data\n      } = await axios.post(`/api/course/video-remove/${course.instructor._id}`, values.video);\n      console.log(data);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        video: {}\n      }));\n      setUploading(false);\n      setUploadButtonText(\"Upload another video\");\n    } catch (err) {\n      console.log(err);\n      setUploading(false);\n      toast(\"Video remove failed\");\n    }\n  };\n\n  const handlePublish = async (e, courseId) => {\n    try {\n      let answer = window.confirm(\"Once you publsih your course, it will be live in the marketplace for users to enroll\");\n      if (!answer) return;\n      const {\n        data\n      } = await axios.put(`/api/course/publish/${courseId}`);\n      setCourse(data);\n      toast(\"Congrats! Your course is live\");\n    } catch (err) {\n      toast(\"Course publish failed. Try again\");\n    }\n  };\n\n  const handleUnpublish = async (e, courseId) => {\n    try {\n      let answer = window.confirm(\"Once you unpublsih your course, it will no be available for users to enroll\");\n      if (!answer) return;\n      const {\n        data\n      } = await axios.put(`/api/course/unpublish/${courseId}`);\n      setCourse(data);\n      toast(\"Your course is unpublished\");\n    } catch (err) {\n      toast(\"Course publish failed. Try again\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InstructorRoute, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contianer-fluid pt-3\",\n      children: course && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid pt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media pt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            size: 80,\n            src: course.image ? course.image.Location : \"/course.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-body pl-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mt-2 text-primary\",\n                  children: course.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginTop: \"-10px\"\n                  },\n                  children: [course.lessons && course.lessons.length, \" Lessons\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginTop: \"-15px\",\n                    fontSize: \"10px\"\n                  },\n                  children: course.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: `${students} Enrolled`,\n                  children: /*#__PURE__*/_jsxDEV(UserSwitchOutlined, {\n                    className: \"h5 pointer text-info mr-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Edit\",\n                  children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                    onClick: () => router.push(`/instructor/course/edit/${slug}`),\n                    className: \"h5 pointer text-warning mr-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), course.lessons && course.lessons.length < 5 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Min 5 lessons required to publish\",\n                  children: /*#__PURE__*/_jsxDEV(QuestionOutlined, {\n                    className: \"h5 pointer text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this) : course.published ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Unpublish\",\n                  children: /*#__PURE__*/_jsxDEV(CloseOutlined, {\n                    onClick: e => handleUnpublish(e, course._id),\n                    className: \"h5 pointer text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Publish\",\n                  children: /*#__PURE__*/_jsxDEV(CheckOutlined, {\n                    onClick: e => handlePublish(e, course._id),\n                    className: \"h5 pointer text-success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              source: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setVisible(true),\n            className: \"col-md-6 offset-md-3 text-center\",\n            type: \"primary\",\n            shape: \"round\",\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 23\n            }, this),\n            size: \"large\",\n            children: \"Add Lesson\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"+ Add Lesson\",\n          centered: true,\n          visible: visible,\n          onCancel: () => setVisible(false),\n          footer: null,\n          children: /*#__PURE__*/_jsxDEV(AddLessonForm, {\n            values: values,\n            setValues: setValues,\n            handleAddLesson: handleAddLesson,\n            uploading: uploading,\n            uploadButtonText: uploadButtonText,\n            handleVideo: handleVideo,\n            progress: progress,\n            handleVideoRemove: handleVideoRemove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row pb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col lesson-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [course && course.lessons && course.lessons.length, \" Lessons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              itemLayout: \"horizontal\",\n              dataSource: course && course.lessons,\n              renderItem: (item, index) => /*#__PURE__*/_jsxDEV(Item, {\n                children: /*#__PURE__*/_jsxDEV(Item.Meta, {\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 33\n                  }, this),\n                  title: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CourseView;","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/instructor/course/view/[slug].js"],"names":["React","useState","useEffect","useRouter","InstructorRoute","axios","Avatar","Tooltip","Button","Modal","List","EditOutlined","CheckOutlined","UploadOutlined","QuestionOutlined","CloseOutlined","UserSwitchOutlined","ReactMarkdown","AddLessonForm","toast","Item","CourseView","course","setCourse","visible","setVisible","values","setValues","title","content","video","uploading","setUploading","uploadButtonText","setUploadButtonText","progress","setProgress","students","setStudents","router","slug","query","loadCourse","studentCount","data","get","post","courseId","_id","console","log","length","handleAddLesson","e","preventDefault","instructor","err","handleVideo","file","target","files","name","videoData","FormData","append","onUploadProgress","Math","round","loaded","total","handleVideoRemove","handlePublish","answer","window","confirm","put","handleUnpublish","image","Location","marginTop","lessons","fontSize","category","push","published","description","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport InstructorRoute from \"../../../../components/routes/InstructorRoute\";\nimport axios from \"axios\";\nimport { Avatar, Tooltip, Button, Modal, List } from \"antd\";\nimport {\n  EditOutlined,\n  CheckOutlined,\n  UploadOutlined,\n  QuestionOutlined,\n  CloseOutlined,\n  UserSwitchOutlined,\n} from \"@ant-design/icons\";\nimport ReactMarkdown from \"react-markdown\";\nimport AddLessonForm from \"../../../../components/forms/AddLessonForm\";\nimport { toast } from \"react-toastify\";\nimport Item from \"antd/lib/list/Item\";\n\nconst CourseView = () => {\n  const [course, setCourse] = useState({});\n  // for lessons\n  const [visible, setVisible] = useState(false);\n  const [values, setValues] = useState({\n    title: \"\",\n    content: \"\",\n    video: {},\n  });\n  const [uploading, setUploading] = useState(false);\n  const [uploadButtonText, setUploadButtonText] = useState(\"Upload Video\");\n  const [progress, setProgress] = useState(0);\n  // student count\n  const [students, setStudents] = useState(0);\n\n  const router = useRouter();\n  const { slug } = router.query;\n\n  useEffect(() => {\n    loadCourse();\n  }, [slug]);\n\n  useEffect(() => {\n    course && studentCount();\n  }, [course]);\n\n  const loadCourse = async () => {\n    const { data } = await axios.get(`/api/course/${slug}`);\n    setCourse(data);\n  };\n\n  const studentCount = async () => {\n    const { data } = await axios.post(`/api/instructor/student-count`, {\n      courseId: course._id,\n    });\n    console.log(\"STUDENT COUNT => \", data);\n    setStudents(data.length);\n  };\n\n  // FUNCTIONS FOR ADD LESSON\n  const handleAddLesson = async (e) => {\n    e.preventDefault();\n    // console.log(values);\n    try {\n      const { data } = await axios.post(\n        `/api/course/lesson/${slug}/${course.instructor._id}`,\n        values\n      );\n      // console.log(data)\n      setValues({ ...values, title: \"\", content: \"\", video: {} });\n      setProgress(0);\n      setUploadButtonText(\"Upload video\");\n      setVisible(false);\n      setCourse(data);\n      toast(\"Lesson added\");\n    } catch (err) {\n      console.log(err);\n      toast(\"Lesson add failed\");\n    }\n  };\n\n  const handleVideo = async (e) => {\n    try {\n      const file = e.target.files[0];\n      setUploadButtonText(file.name);\n      setUploading(true);\n\n      const videoData = new FormData();\n      videoData.append(\"video\", file);\n      // save progress bar and send video as form data to backend\n      const { data } = await axios.post(\n        `/api/course/video-upload/${course.instructor._id}`,\n        videoData,\n        {\n          onUploadProgress: (e) => {\n            setProgress(Math.round((100 * e.loaded) / e.total));\n          },\n        }\n      );\n      // once response is received\n      console.log(data);\n      setValues({ ...values, video: data });\n      setUploading(false);\n    } catch (err) {\n      console.log(err);\n      setUploading(false);\n      toast(\"Video upload failed\");\n    }\n  };\n\n  const handleVideoRemove = async () => {\n    try {\n      setUploading(true);\n      const { data } = await axios.post(\n        `/api/course/video-remove/${course.instructor._id}`,\n        values.video\n      );\n      console.log(data);\n      setValues({ ...values, video: {} });\n      setUploading(false);\n      setUploadButtonText(\"Upload another video\");\n    } catch (err) {\n      console.log(err);\n      setUploading(false);\n      toast(\"Video remove failed\");\n    }\n  };\n\n  const handlePublish = async (e, courseId) => {\n    try {\n      let answer = window.confirm(\n        \"Once you publsih your course, it will be live in the marketplace for users to enroll\"\n      );\n      if (!answer) return;\n      const { data } = await axios.put(`/api/course/publish/${courseId}`);\n      setCourse(data);\n      toast(\"Congrats! Your course is live\");\n    } catch (err) {\n      toast(\"Course publish failed. Try again\");\n    }\n  };\n\n  const handleUnpublish = async (e, courseId) => {\n    try {\n      let answer = window.confirm(\n        \"Once you unpublsih your course, it will no be available for users to enroll\"\n      );\n      if (!answer) return;\n      const { data } = await axios.put(`/api/course/unpublish/${courseId}`);\n      setCourse(data);\n      toast(\"Your course is unpublished\");\n    } catch (err) {\n      toast(\"Course publish failed. Try again\");\n    }\n  };\n\n  return (\n    <InstructorRoute>\n      <div className=\"contianer-fluid pt-3\">\n        {/* <pre>{JSON.stringify(course, null, 4)}</pre> */}\n        {course && (\n          <div className=\"container-fluid pt-1\">\n            <div className=\"media pt-2\">\n              <Avatar\n                size={80}\n                src={course.image ? course.image.Location : \"/course.png\"}\n              />\n\n              <div className=\"media-body pl-2\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h5 className=\"mt-2 text-primary\">{course.name}</h5>\n                    <p style={{ marginTop: \"-10px\" }}>\n                      {course.lessons && course.lessons.length} Lessons\n                    </p>\n                    <p style={{ marginTop: \"-15px\", fontSize: \"10px\" }}>\n                      {course.category}\n                    </p>\n                  </div>\n\n                  <div className=\"d-flex pt-4\">\n                    <Tooltip title={`${students} Enrolled`}>\n                      <UserSwitchOutlined className=\"h5 pointer text-info mr-4\" />\n                    </Tooltip>\n\n                    <Tooltip title=\"Edit\">\n                      <EditOutlined\n                        onClick={() =>\n                          router.push(`/instructor/course/edit/${slug}`)\n                        }\n                        className=\"h5 pointer text-warning mr-4\"\n                      />\n                    </Tooltip>\n\n                    {course.lessons && course.lessons.length < 5 ? (\n                      <Tooltip title=\"Min 5 lessons required to publish\">\n                        <QuestionOutlined className=\"h5 pointer text-danger\" />\n                      </Tooltip>\n                    ) : course.published ? (\n                      <Tooltip title=\"Unpublish\">\n                        <CloseOutlined\n                          onClick={(e) => handleUnpublish(e, course._id)}\n                          className=\"h5 pointer text-danger\"\n                        />\n                      </Tooltip>\n                    ) : (\n                      <Tooltip title=\"Publish\">\n                        <CheckOutlined\n                          onClick={(e) => handlePublish(e, course._id)}\n                          className=\"h5 pointer text-success\"\n                        />\n                      </Tooltip>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col\">\n                <ReactMarkdown source={course.description} />\n              </div>\n            </div>\n            <div className=\"row\">\n              <Button\n                onClick={() => setVisible(true)}\n                className=\"col-md-6 offset-md-3 text-center\"\n                type=\"primary\"\n                shape=\"round\"\n                icon={<UploadOutlined />}\n                size=\"large\"\n              >\n                Add Lesson\n              </Button>\n            </div>\n\n            <br />\n\n            <Modal\n              title=\"+ Add Lesson\"\n              centered\n              visible={visible}\n              onCancel={() => setVisible(false)}\n              footer={null}\n            >\n              <AddLessonForm\n                values={values}\n                setValues={setValues}\n                handleAddLesson={handleAddLesson}\n                uploading={uploading}\n                uploadButtonText={uploadButtonText}\n                handleVideo={handleVideo}\n                progress={progress}\n                handleVideoRemove={handleVideoRemove}\n              />\n            </Modal>\n\n            <div className=\"row pb-5\">\n              <div className=\"col lesson-list\">\n                <h4>\n                  {course && course.lessons && course.lessons.length} Lessons\n                </h4>\n                <List\n                  itemLayout=\"horizontal\"\n                  dataSource={course && course.lessons}\n                  renderItem={(item, index) => (\n                    <Item>\n                      <Item.Meta\n                        avatar={<Avatar>{index + 1}</Avatar>}\n                        title={item.title}\n                      ></Item.Meta>\n                    </Item>\n                  )}\n                ></List>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </InstructorRoute>\n  );\n};\n\nexport default CourseView;\n"]},"metadata":{},"sourceType":"module"}