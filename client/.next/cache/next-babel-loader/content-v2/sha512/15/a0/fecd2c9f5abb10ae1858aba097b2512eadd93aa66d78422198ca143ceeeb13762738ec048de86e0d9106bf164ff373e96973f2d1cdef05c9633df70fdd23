{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\instructor\\\\revenue.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../../context\";\nimport InstructorRoute from \"../../components/routes/InstructorRoute\";\nimport axios from \"axios\";\nimport { DollarOutlined, SettingOutlined, SyncOutlined } from \"@ant-design/icons\";\nimport { stripeCurrencyFormatter } from \"../../utils/helpers\";\n\nvar InstructorRevenue = function InstructorRevenue() {\n  _s();\n\n  var _useState = useState({\n    pending: []\n  }),\n      balance = _useState[0],\n      setBalance = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    sendBalanceRequest();\n  }, []);\n\n  var sendBalanceRequest = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/instructor/balance\");\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setBalance(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendBalanceRequest() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handlePayoutSettings = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setLoading(true);\n              _context2.next = 4;\n              return axios.get(\"/api/instructor/payout-settings\");\n\n            case 4:\n              _yield$axios$get2 = _context2.sent;\n              data = _yield$axios$get2.data;\n              window.location.href = data;\n              _context2.next = 14;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              setLoading(false);\n              console.log(_context2.t0);\n              alert(\"Unable to access payout settings. Try later.\");\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function handlePayoutSettings() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(InstructorRoute, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row pt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 offset-md-2 bg-light p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Revenue report \", /*#__PURE__*/_jsxDEV(DollarOutlined, {\n              className: \"float-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 30\n            }, _this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"You get paid directly from stripe to your bank account every 48 hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Pending balance\", balance.pending && balance.pending.map(function (bp, i) {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"float-right\",\n                children: stripeCurrencyFormatter(bp)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"For last 48 hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Payouts\", \" \", !loading ? /*#__PURE__*/_jsxDEV(SettingOutlined, {\n              className: \"float-right pointer\",\n              onClick: handlePayoutSettings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, _this) : /*#__PURE__*/_jsxDEV(SyncOutlined, {\n              spin: true,\n              className: \"float-right pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Update your stripe account details or view previous payouts.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InstructorRevenue, \"4Azc95/sq48OOX4VKwlaAW/kCZU=\");\n\n_c = InstructorRevenue;\nexport default InstructorRevenue;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstructorRevenue\");","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/instructor/revenue.js"],"names":["useState","useEffect","useContext","Context","InstructorRoute","axios","DollarOutlined","SettingOutlined","SyncOutlined","stripeCurrencyFormatter","InstructorRevenue","pending","balance","setBalance","loading","setLoading","sendBalanceRequest","get","data","handlePayoutSettings","window","location","href","console","log","alert","map","bp","i"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../../context\";\nimport InstructorRoute from \"../../components/routes/InstructorRoute\";\nimport axios from \"axios\";\nimport {\n  DollarOutlined,\n  SettingOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport { stripeCurrencyFormatter } from \"../../utils/helpers\";\n\nconst InstructorRevenue = () => {\n  const [balance, setBalance] = useState({ pending: [] });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    sendBalanceRequest();\n  }, []);\n\n  const sendBalanceRequest = async () => {\n    const { data } = await axios.get(\"/api/instructor/balance\");\n    setBalance(data);\n  };\n\n  const handlePayoutSettings = async () => {\n    try {\n      setLoading(true);\n      const { data } = await axios.get(\"/api/instructor/payout-settings\");\n      window.location.href = data;\n    } catch (err) {\n      setLoading(false);\n      console.log(err);\n      alert(\"Unable to access payout settings. Try later.\");\n    }\n  };\n\n  return (\n    <InstructorRoute>\n      <div className=\"container\">\n        <div className=\"row pt-2\">\n          <div className=\"col-md-8 offset-md-2 bg-light p-5\">\n            <h2>\n              Revenue report <DollarOutlined className=\"float-right\" />{\" \"}\n            </h2>\n            <small>\n              You get paid directly from stripe to your bank account every 48\n              hour\n            </small>\n            <hr />\n            {/* {JSON.stringify(balance, null, 4)} */}\n            <h4>\n              Pending balance\n              {balance.pending &&\n                balance.pending.map((bp, i) => (\n                  <span key={i} className=\"float-right\">\n                    {stripeCurrencyFormatter(bp)}\n                  </span>\n                ))}\n            </h4>\n            <small>For last 48 hours</small>\n            <hr />\n            <h4>\n              Payouts{\" \"}\n              {!loading ? (\n                <SettingOutlined\n                  className=\"float-right pointer\"\n                  onClick={handlePayoutSettings}\n                />\n              ) : (\n                <SyncOutlined spin className=\"float-right pointer\" />\n              )}\n            </h4>\n            <small>\n              Update your stripe account details or view previous payouts.\n            </small>\n          </div>\n        </div>\n      </div>\n    </InstructorRoute>\n  );\n};\n\nexport default InstructorRevenue;\n"]},"metadata":{},"sourceType":"module"}