{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\user\\\\course\\\\[slug].js\";\nimport React, { useState, useEffect, createElement } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport StudentRoute from \"../../../components/routes/StudentRoute\";\nimport { Button, Menu, Avatar } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport ReactMarkdown from \"react-markdown\";\nimport { PlayCircleOutlined, MenuFoldOutlined, MenuUnfoldOutlined, CheckCircleFilled, MinusCircleFilled } from \"@ant-design/icons\";\nconst {\n  Item\n} = Menu;\n\nconst SingleCourse = () => {\n  const {\n    0: clicked,\n    1: setClicked\n  } = useState(-1);\n  const {\n    0: collapsed,\n    1: setCollapsed\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: course,\n    1: setCourse\n  } = useState({\n    lessons: []\n  });\n  const {\n    0: completedLessons,\n    1: setCompletedLessons\n  } = useState([]); // force state update\n\n  const {\n    0: updateState,\n    1: setUpdateState\n  } = useState(false); // router\n\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  useEffect(() => {\n    if (slug) loadCourse();\n  }, [slug]);\n  useEffect(() => {\n    if (course) loadCompletedLessons();\n  }, [course]);\n\n  const loadCourse = async () => {\n    const {\n      data\n    } = await axios.get(`/api/user/course/${slug}`);\n    setCourse(data);\n  };\n\n  const loadCompletedLessons = async () => {\n    const {\n      data\n    } = await axios.post(`/api/list-completed`, {\n      courseId: course._id\n    });\n    console.log(\"COMPLETED LESSONS => \", data);\n    setCompletedLessons(data);\n  };\n\n  const markCompleted = async () => {\n    const {\n      data\n    } = await axios.post(`/api/mark-completed`, {\n      courseId: course._id,\n      lessonId: course.lessons[clicked]._id\n    });\n    console.log(data);\n    setCompletedLessons([...completedLessons, course.lessons[clicked]._id]);\n  };\n\n  const markIncompleted = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(`/api/mark-incomplete`, {\n        courseId: course._id,\n        lessonId: course.lessons[clicked]._id\n      });\n      console.log(data);\n      const all = completedLessons;\n      console.log(\"ALL => \", all);\n      const index = all.indexOf(course.lessons[clicked]._id);\n\n      if (index > -1) {\n        all.splice(index, 1);\n        console.log(\"ALL WITHOUT REMOVED => \", all);\n        setCompletedLessons(all);\n        setUpdateState(!updateState);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StudentRoute, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maWidth: 320\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCollapsed(!collapsed),\n          className: \"text-primary mt-1 btn-block mb-2\",\n          children: [/*#__PURE__*/createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined), \" \", !collapsed && \"Lessons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          defaultSelectedKeys: [clicked],\n          inlineCollapsed: collapsed,\n          style: {\n            height: \"80vh\",\n            overflow: \"scroll\"\n          },\n          children: course.lessons.map((lesson, index) => /*#__PURE__*/_jsxDEV(Item, {\n            onClick: () => setClicked(index),\n            icon: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 23\n            }, this),\n            children: [lesson.title.substring(0, 30), \" \", completedLessons.includes(lesson._id) ? /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n              className: \"float-right text-primary ml-2\",\n              style: {\n                marginTop: \"13px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(MinusCircleFilled, {\n              className: \"float-right text-danger ml-2\",\n              style: {\n                marginTop: \"13px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: clicked !== -1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col alert alert-primary square\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: course.lessons[clicked].title.substring(0, 30)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), completedLessons.includes(course.lessons[clicked]._id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right pointer\",\n              onClick: markIncompleted,\n              children: \"Mark as incomplete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right pointer\",\n              onClick: markCompleted,\n              children: \"Mark as completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), course.lessons[clicked].video && course.lessons[clicked].video.Location && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrapper\",\n              children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                className: \"player\",\n                url: course.lessons[clicked].video.Location,\n                width: \"100%\",\n                height: \"100%\",\n                controls: true,\n                onEnded: () => markCompleted()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            source: course.lessons[clicked].content,\n            className: \"single-post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center p-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center p-5\",\n            children: [/*#__PURE__*/_jsxDEV(PlayCircleOutlined, {\n              className: \"text-primary display-1 p-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead\",\n              children: \"Clcik on the lessons to start learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SingleCourse;","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/user/course/[slug].js"],"names":["React","useState","useEffect","createElement","useRouter","axios","StudentRoute","Button","Menu","Avatar","ReactPlayer","ReactMarkdown","PlayCircleOutlined","MenuFoldOutlined","MenuUnfoldOutlined","CheckCircleFilled","MinusCircleFilled","Item","SingleCourse","clicked","setClicked","collapsed","setCollapsed","loading","setLoading","course","setCourse","lessons","completedLessons","setCompletedLessons","updateState","setUpdateState","router","slug","query","loadCourse","loadCompletedLessons","data","get","post","courseId","_id","console","log","markCompleted","lessonId","markIncompleted","all","index","indexOf","splice","err","maWidth","height","overflow","map","lesson","title","substring","includes","marginTop","video","Location","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createElement } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport StudentRoute from \"../../../components/routes/StudentRoute\";\nimport { Button, Menu, Avatar } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n  PlayCircleOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  CheckCircleFilled,\n  MinusCircleFilled,\n} from \"@ant-design/icons\";\n\nconst { Item } = Menu;\n\nconst SingleCourse = () => {\n  const [clicked, setClicked] = useState(-1);\n  const [collapsed, setCollapsed] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [course, setCourse] = useState({ lessons: [] });\n  const [completedLessons, setCompletedLessons] = useState([]);\n  // force state update\n  const [updateState, setUpdateState] = useState(false);\n\n  // router\n  const router = useRouter();\n  const { slug } = router.query;\n\n  useEffect(() => {\n    if (slug) loadCourse();\n  }, [slug]);\n\n  useEffect(() => {\n    if (course) loadCompletedLessons();\n  }, [course]);\n\n  const loadCourse = async () => {\n    const { data } = await axios.get(`/api/user/course/${slug}`);\n    setCourse(data);\n  };\n\n  const loadCompletedLessons = async () => {\n    const { data } = await axios.post(`/api/list-completed`, {\n      courseId: course._id,\n    });\n    console.log(\"COMPLETED LESSONS => \", data);\n    setCompletedLessons(data);\n  };\n\n  const markCompleted = async () => {\n    const { data } = await axios.post(`/api/mark-completed`, {\n      courseId: course._id,\n      lessonId: course.lessons[clicked]._id,\n    });\n    console.log(data);\n    setCompletedLessons([...completedLessons, course.lessons[clicked]._id]);\n  };\n\n  const markIncompleted = async () => {\n    try {\n      const { data } = await axios.post(`/api/mark-incomplete`, {\n        courseId: course._id,\n        lessonId: course.lessons[clicked]._id,\n      });\n      console.log(data);\n      const all = completedLessons;\n      console.log(\"ALL => \", all);\n      const index = all.indexOf(course.lessons[clicked]._id);\n      if (index > -1) {\n        all.splice(index, 1);\n        console.log(\"ALL WITHOUT REMOVED => \", all);\n        setCompletedLessons(all);\n        setUpdateState(!updateState);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <StudentRoute>\n      <div className=\"row\">\n        <div style={{ maWidth: 320 }}>\n          <Button\n            onClick={() => setCollapsed(!collapsed)}\n            className=\"text-primary mt-1 btn-block mb-2\"\n          >\n            {createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}{\" \"}\n            {!collapsed && \"Lessons\"}\n          </Button>\n          <Menu\n            defaultSelectedKeys={[clicked]}\n            inlineCollapsed={collapsed}\n            style={{ height: \"80vh\", overflow: \"scroll\" }}\n          >\n            {course.lessons.map((lesson, index) => (\n              <Item\n                onClick={() => setClicked(index)}\n                key={index}\n                icon={<Avatar>{index + 1}</Avatar>}\n              >\n                {lesson.title.substring(0, 30)}{\" \"}\n                {completedLessons.includes(lesson._id) ? (\n                  <CheckCircleFilled\n                    className=\"float-right text-primary ml-2\"\n                    style={{ marginTop: \"13px\" }}\n                  />\n                ) : (\n                  <MinusCircleFilled\n                    className=\"float-right text-danger ml-2\"\n                    style={{ marginTop: \"13px\" }}\n                  />\n                )}\n              </Item>\n            ))}\n          </Menu>\n        </div>\n\n        <div className=\"col\">\n          {clicked !== -1 ? (\n            <>\n              <div className=\"col alert alert-primary square\">\n                <b>{course.lessons[clicked].title.substring(0, 30)}</b>\n                {completedLessons.includes(course.lessons[clicked]._id) ? (\n                  <span\n                    className=\"float-right pointer\"\n                    onClick={markIncompleted}\n                  >\n                    Mark as incomplete\n                  </span>\n                ) : (\n                  <span className=\"float-right pointer\" onClick={markCompleted}>\n                    Mark as completed\n                  </span>\n                )}\n              </div>\n\n              {course.lessons[clicked].video &&\n                course.lessons[clicked].video.Location && (\n                  <>\n                    <div className=\"wrapper\">\n                      <ReactPlayer\n                        className=\"player\"\n                        url={course.lessons[clicked].video.Location}\n                        width=\"100%\"\n                        height=\"100%\"\n                        controls\n                        onEnded={() => markCompleted()}\n                      />\n                    </div>\n                  </>\n                )}\n\n              <ReactMarkdown\n                source={course.lessons[clicked].content}\n                className=\"single-post\"\n              />\n            </>\n          ) : (\n            <div className=\"d-flex justify-content-center p-5\">\n              <div className=\"text-center p-5\">\n                <PlayCircleOutlined className=\"text-primary display-1 p-5\" />\n                <p className=\"lead\">Clcik on the lessons to start learning</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </StudentRoute>\n  );\n};\n\nexport default SingleCourse;\n"]},"metadata":{},"sourceType":"module"}