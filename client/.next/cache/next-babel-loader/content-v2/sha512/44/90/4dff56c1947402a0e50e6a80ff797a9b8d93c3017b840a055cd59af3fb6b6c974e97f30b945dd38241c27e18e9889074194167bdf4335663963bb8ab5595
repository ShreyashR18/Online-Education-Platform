{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\course\\\\[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport SingleCourseJumbotron from \"../../components/cards/SingleCourseJumbotron\";\nimport PreviewModal from \"../../components/modal/PreviewModal\";\nimport SingleCourseLessons from \"../../components/cards/SingleCourseLessons\";\nimport { Context } from \"../../context\";\nimport { toast } from \"react-toastify\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nvar SingleCourse = function SingleCourse(_ref) {\n  _s();\n\n  var course = _ref.course;\n\n  // state\n  var _useState = useState(false),\n      showModal = _useState[0],\n      setShowModal = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      preview = _useState2[0],\n      setPreview = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState({}),\n      enrolled = _useState4[0],\n      setEnrolled = _useState4[1]; // context\n\n\n  var _useContext = useContext(Context),\n      user = _useContext.state.user;\n\n  useEffect(function () {\n    if (user && course) checkEnrollment();\n  }, [user, course]);\n\n  var checkEnrollment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/check-enrollment/\".concat(course._id));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              console.log(\"CHECK ENROLLMENT\", data);\n              setEnrolled(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkEnrollment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var handlePaidEnrollment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$post, data, stripe;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setLoading(true); // check if user is logged in\n\n              if (!user) router.push(\"/login\"); // check if already enrolled\n\n              if (!enrolled.status) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", router.push(\"/user/course/\".concat(enrolled.course.slug)));\n\n            case 5:\n              _context2.next = 7;\n              return axios.post(\"/api/paid-enrollment/\".concat(course._id));\n\n            case 7:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              _context2.next = 11;\n              return loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\n            case 11:\n              stripe = _context2.sent;\n              stripe.redirectToCheckout({\n                sessionId: data\n              });\n              _context2.next = 20;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              toast(\"Enrollment failed, try again.\");\n              console.log(_context2.t0);\n              setLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 15]]);\n    }));\n\n    return function handlePaidEnrollment() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleFreeEnrollment = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // console.log(\"handle free enrollment\");\n              e.preventDefault();\n              _context3.prev = 1;\n              // check if user is logged in\n              if (!user) router.push(\"/login\"); // check if already enrolled\n\n              if (!enrolled.status) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", router.push(\"/user/course/\".concat(enrolled.course.slug)));\n\n            case 5:\n              setLoading(true);\n              _context3.next = 8;\n              return axios.post(\"/api/free-enrollment/\".concat(course._id));\n\n            case 8:\n              _yield$axios$post2 = _context3.sent;\n              data = _yield$axios$post2.data;\n              toast(data.message);\n              setLoading(false);\n              router.push(\"/user/course/\".concat(data.course.slug));\n              _context3.next = 20;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              toast(\"Enrollment failed. Try again.\");\n              console.log(_context3.t0);\n              setLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15]]);\n    }));\n\n    return function handleFreeEnrollment(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SingleCourseJumbotron, {\n      course: course,\n      showModal: showModal,\n      setShowModal: setShowModal,\n      preview: preview,\n      setPreview: setPreview,\n      user: user,\n      loading: loading,\n      handlePaidEnrollment: handlePaidEnrollment,\n      handleFreeEnrollment: handleFreeEnrollment,\n      enrolled: enrolled,\n      setEnrolled: setEnrolled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(PreviewModal, {\n      showModal: showModal,\n      setShowModal: setShowModal,\n      preview: preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this), course.lessons && /*#__PURE__*/_jsxDEV(SingleCourseLessons, {\n      lessons: course.lessons,\n      setPreview: setPreview,\n      showModal: showModal,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(SingleCourse, \"HTsHTVyojQkDEDMx/A0vwQN9pdc=\", false, function () {\n  return [useRouter];\n});\n\n_c = SingleCourse;\nexport var __N_SSP = true;\nexport default SingleCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCourse\");","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/course/[slug].js"],"names":["useState","useEffect","useContext","axios","useRouter","SingleCourseJumbotron","PreviewModal","SingleCourseLessons","Context","toast","loadStripe","SingleCourse","course","showModal","setShowModal","preview","setPreview","loading","setLoading","enrolled","setEnrolled","user","state","checkEnrollment","get","_id","data","console","log","router","slug","query","handlePaidEnrollment","push","status","post","process","env","NEXT_PUBLIC_STRIPE_KEY","stripe","redirectToCheckout","sessionId","handleFreeEnrollment","e","preventDefault","message","lessons"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport SingleCourseJumbotron from \"../../components/cards/SingleCourseJumbotron\";\nimport PreviewModal from \"../../components/modal/PreviewModal\";\nimport SingleCourseLessons from \"../../components/cards/SingleCourseLessons\";\nimport { Context } from \"../../context\";\nimport { toast } from \"react-toastify\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst SingleCourse = ({ course }) => {\n  // state\n  const [showModal, setShowModal] = useState(false);\n  const [preview, setPreview] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [enrolled, setEnrolled] = useState({});\n  // context\n  const {\n    state: { user },\n  } = useContext(Context);\n\n  useEffect(() => {\n    if (user && course) checkEnrollment();\n  }, [user, course]);\n\n  const checkEnrollment = async () => {\n    const { data } = await axios.get(`/api/check-enrollment/${course._id}`);\n    console.log(\"CHECK ENROLLMENT\", data);\n    setEnrolled(data);\n  };\n\n  const router = useRouter();\n  const { slug } = router.query;\n\n  const handlePaidEnrollment = async () => {\n    // console.log(\"handle paid enrollment\");\n    try {\n      setLoading(true);\n      // check if user is logged in\n      if (!user) router.push(\"/login\");\n      // check if already enrolled\n      if (enrolled.status)\n        return router.push(`/user/course/${enrolled.course.slug}`);\n      const { data } = await axios.post(`/api/paid-enrollment/${course._id}`);\n      const stripe = await loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n      stripe.redirectToCheckout({ sessionId: data });\n    } catch (err) {\n      toast(\"Enrollment failed, try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const handleFreeEnrollment = async (e) => {\n    // console.log(\"handle free enrollment\");\n    e.preventDefault();\n    try {\n      // check if user is logged in\n      if (!user) router.push(\"/login\");\n      // check if already enrolled\n      if (enrolled.status)\n        return router.push(`/user/course/${enrolled.course.slug}`);\n      setLoading(true);\n      const { data } = await axios.post(`/api/free-enrollment/${course._id}`);\n      toast(data.message);\n      setLoading(false);\n      router.push(`/user/course/${data.course.slug}`);\n    } catch (err) {\n      toast(\"Enrollment failed. Try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {/* <pre>{JSON.stringify(course, null, 4)}</pre> */}\n      <SingleCourseJumbotron\n        course={course}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        preview={preview}\n        setPreview={setPreview}\n        user={user}\n        loading={loading}\n        handlePaidEnrollment={handlePaidEnrollment}\n        handleFreeEnrollment={handleFreeEnrollment}\n        enrolled={enrolled}\n        setEnrolled={setEnrolled}\n      />\n\n      <PreviewModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        preview={preview}\n      />\n\n      {course.lessons && (\n        <SingleCourseLessons\n          lessons={course.lessons}\n          setPreview={setPreview}\n          showModal={showModal}\n          setShowModal={setShowModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport async function getServerSideProps({ query }) {\n  const { data } = await axios.get(`${process.env.API}/course/${query.slug}`);\n  return {\n    props: {\n      course: data,\n    },\n  };\n}\n\nexport default SingleCourse;\n"]},"metadata":{},"sourceType":"module"}