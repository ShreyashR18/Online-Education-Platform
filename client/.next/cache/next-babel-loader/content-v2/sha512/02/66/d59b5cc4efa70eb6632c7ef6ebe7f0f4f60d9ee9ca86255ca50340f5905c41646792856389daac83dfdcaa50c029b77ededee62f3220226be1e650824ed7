{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\context\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useRouter, userRouter } from \"next/router\"; // initial state\n\nconst intialState = {\n  user: null\n}; // create context\n\nconst Context = /*#__PURE__*/createContext(); // root reducer\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case \"LOGOUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}; // context provider\n\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(rootReducer, intialState); // router\n\n  const router = useRouter();\n  useEffect(() => {\n    dispatch({\n      type: \"LOGIN\",\n      payload: JSON.parse(window.localStorage.getItem(\"user\"))\n    });\n  }, []);\n  axios.interceptors.response.use(function (response) {\n    // any status code that lie within the range of 2XX cause this function\n    // to trigger\n    return response;\n  }, function (error) {\n    // any status codes that falls outside the range of 2xx cause this function\n    // to trigger\n    let res = error.response;\n\n    if (res.status === 401 && res.config && !res.config.__isRetryRequest) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/logout\").then(data => {\n          console.log(\"/401 error > logout\");\n          dispatch({\n            type: \"LOGOUT\"\n          });\n          window.localStorage.removeItem(\"user\");\n          router.push(\"/login\");\n        }).catch(err => {\n          console.log(\"AXIOS INTERCEPTORS ERR\", err);\n          reject(error);\n        });\n      });\n    }\n\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      const {\n        data\n      } = await axios.get(\"/api/csrf-token\"); // console.log(\"CSRF\", data);\n\n      axios.defaults.headers[\"X-CSRF-Token\"] = data.getCsrfToken;\n    };\n\n    getCsrfToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\nexport { Context, Provider };","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/context/index.js"],"names":["useReducer","createContext","useEffect","axios","useRouter","userRouter","intialState","user","Context","rootReducer","state","action","type","payload","Provider","children","dispatch","router","JSON","parse","window","localStorage","getItem","interceptors","response","use","error","res","status","config","__isRetryRequest","Promise","resolve","reject","get","then","data","console","log","removeItem","push","catch","err","getCsrfToken","defaults","headers"],"mappings":"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","sourcesContent":["import { useReducer, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useRouter, userRouter } from \"next/router\";\n\n// initial state\nconst intialState = {\n  user: null,\n};\n\n// create context\nconst Context = createContext();\n\n// root reducer\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return { ...state, user: action.payload };\n    case \"LOGOUT\":\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};\n\n// context provider\nconst Provider = ({ children }) => {\n  const [state, dispatch] = useReducer(rootReducer, intialState);\n\n  // router\n  const router = useRouter();\n\n  useEffect(() => {\n    dispatch({\n      type: \"LOGIN\",\n      payload: JSON.parse(window.localStorage.getItem(\"user\")),\n    });\n  }, []);\n\n  axios.interceptors.response.use(\n    function (response) {\n      // any status code that lie within the range of 2XX cause this function\n      // to trigger\n      return response;\n    },\n    function (error) {\n      // any status codes that falls outside the range of 2xx cause this function\n      // to trigger\n      let res = error.response;\n      if (res.status === 401 && res.config && !res.config.__isRetryRequest) {\n        return new Promise((resolve, reject) => {\n          axios\n            .get(\"/api/logout\")\n            .then((data) => {\n              console.log(\"/401 error > logout\");\n              dispatch({ type: \"LOGOUT\" });\n              window.localStorage.removeItem(\"user\");\n              router.push(\"/login\");\n            })\n            .catch((err) => {\n              console.log(\"AXIOS INTERCEPTORS ERR\", err);\n              reject(error);\n            });\n        });\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      const { data } = await axios.get(\"/api/csrf-token\");\n      // console.log(\"CSRF\", data);\n      axios.defaults.headers[\"X-CSRF-Token\"] = data.getCsrfToken;\n    };\n    getCsrfToken();\n  }, []);\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\n  );\n};\n\nexport { Context, Provider };\n"]},"metadata":{},"sourceType":"module"}