{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Shreyash/Desktop/temp code/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyash\\\\Desktop\\\\temp code\\\\client\\\\pages\\\\user\\\\course\\\\[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createElement } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport StudentRoute from \"../../../components/routes/StudentRoute\";\nimport { Button, Menu, Avatar } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport ReactMarkdown from \"react-markdown\";\nimport { PlayCircleOutlined, MenuFoldOutlined, MenuUnfoldOutlined, CheckCircleFilled, MinusCircleFilled } from \"@ant-design/icons\";\nvar Item = Menu.Item;\n\nvar SingleCourse = function SingleCourse() {\n  _s();\n\n  var _useState = useState(-1),\n      clicked = _useState[0],\n      setClicked = _useState[1];\n\n  var _useState2 = useState(false),\n      collapsed = _useState2[0],\n      setCollapsed = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState({\n    lessons: []\n  }),\n      course = _useState4[0],\n      setCourse = _useState4[1];\n\n  var _useState5 = useState([]),\n      completedLessons = _useState5[0],\n      setCompletedLessons = _useState5[1]; // force state update\n\n\n  var _useState6 = useState(false),\n      updateState = _useState6[0],\n      setUpdateState = _useState6[1]; // router\n\n\n  var router = useRouter();\n  var slug = router.query.slug;\n  useEffect(function () {\n    if (slug) loadCourse();\n  }, [slug]);\n  useEffect(function () {\n    if (course) loadCompletedLessons();\n  }, [course]);\n\n  var loadCourse = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/user/course/\".concat(slug));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setCourse(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCourse() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadCompletedLessons = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"/api/list-completed\", {\n                courseId: course._id\n              });\n\n            case 2:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              console.log(\"COMPLETED LESSONS => \", data);\n              setCompletedLessons(data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadCompletedLessons() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var markCompleted = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.post(\"/api/mark-completed\", {\n                courseId: course._id,\n                lessonId: course.lessons[clicked]._id\n              });\n\n            case 2:\n              _yield$axios$post2 = _context3.sent;\n              data = _yield$axios$post2.data;\n              console.log(data);\n              setCompletedLessons([].concat(_toConsumableArray(completedLessons), [course.lessons[clicked]._id]));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function markCompleted() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var markIncompleted = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$axios$post3, data, all, index;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.post(\"/api/mark-incomplete\", {\n                courseId: course._id,\n                lessonId: course.lessons[clicked]._id\n              });\n\n            case 3:\n              _yield$axios$post3 = _context4.sent;\n              data = _yield$axios$post3.data;\n              console.log(data);\n              all = completedLessons;\n              console.log(\"ALL => \", all);\n              index = all.indexOf(course.lessons[clicked]._id);\n\n              if (index > -1) {\n                all.splice(index, 1);\n                console.log(\"ALL WITHOUT REMOVED => \", all);\n                setCompletedLessons(all);\n                setUpdateState(!updateState);\n              }\n\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12]]);\n    }));\n\n    return function markIncompleted() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(StudentRoute, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maWidth: 320\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            return setCollapsed(!collapsed);\n          },\n          className: \"text-primary mt-1 btn-block mb-2\",\n          children: [/*#__PURE__*/createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined), \" \", !collapsed && \"Lessons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Menu, {\n          defaultSelectedKeys: [clicked],\n          inlineCollapsed: collapsed,\n          style: {\n            height: \"80vh\",\n            overflow: \"scroll\"\n          },\n          children: course.lessons.map(function (lesson, index) {\n            return /*#__PURE__*/_jsxDEV(Item, {\n              onClick: function onClick() {\n                return setClicked(index);\n              },\n              icon: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, _this),\n              children: [lesson.title.substring(0, 30), \" \", completedLessons.includes(lesson._id) ? /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n                className: \"float-right text-primary ml-2\",\n                style: {\n                  marginTop: \"13px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(MinusCircleFilled, {\n                className: \"float-right text-danger ml-2\",\n                style: {\n                  marginTop: \"13px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: clicked !== -1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col alert alert-primary square\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: course.lessons[clicked].title.substring(0, 30)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, _this), completedLessons.includes(course.lessons[clicked]._id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right pointer\",\n              onClick: markIncompleted,\n              children: \"Mark as incomplete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right pointer\",\n              onClick: markCompleted,\n              children: \"Mark as completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, _this), course.lessons[clicked].video && course.lessons[clicked].video.Location && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrapper\",\n              children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                className: \"player\",\n                url: course.lessons[clicked].video.Location,\n                width: \"100%\",\n                height: \"100%\",\n                controls: true,\n                onEnded: function onEnded() {\n                  return markCompleted();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            source: course.lessons[clicked].content,\n            className: \"single-post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center p-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center p-5\",\n            children: [/*#__PURE__*/_jsxDEV(PlayCircleOutlined, {\n              className: \"text-primary display-1 p-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead\",\n              children: \"Clcik on the lessons to start learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SingleCourse, \"QfW8VpF0ZqeYSJYrUVz8ntEpzFM=\", false, function () {\n  return [useRouter];\n});\n\n_c = SingleCourse;\nexport default SingleCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCourse\");","map":{"version":3,"sources":["C:/Users/Shreyash/Desktop/temp code/client/pages/user/course/[slug].js"],"names":["React","useState","useEffect","createElement","useRouter","axios","StudentRoute","Button","Menu","Avatar","ReactPlayer","ReactMarkdown","PlayCircleOutlined","MenuFoldOutlined","MenuUnfoldOutlined","CheckCircleFilled","MinusCircleFilled","Item","SingleCourse","clicked","setClicked","collapsed","setCollapsed","loading","setLoading","lessons","course","setCourse","completedLessons","setCompletedLessons","updateState","setUpdateState","router","slug","query","loadCourse","loadCompletedLessons","get","data","post","courseId","_id","console","log","markCompleted","lessonId","markIncompleted","all","index","indexOf","splice","maWidth","height","overflow","map","lesson","title","substring","includes","marginTop","video","Location","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createElement } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport StudentRoute from \"../../../components/routes/StudentRoute\";\nimport { Button, Menu, Avatar } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n  PlayCircleOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  CheckCircleFilled,\n  MinusCircleFilled,\n} from \"@ant-design/icons\";\n\nconst { Item } = Menu;\n\nconst SingleCourse = () => {\n  const [clicked, setClicked] = useState(-1);\n  const [collapsed, setCollapsed] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [course, setCourse] = useState({ lessons: [] });\n  const [completedLessons, setCompletedLessons] = useState([]);\n  // force state update\n  const [updateState, setUpdateState] = useState(false);\n\n  // router\n  const router = useRouter();\n  const { slug } = router.query;\n\n  useEffect(() => {\n    if (slug) loadCourse();\n  }, [slug]);\n\n  useEffect(() => {\n    if (course) loadCompletedLessons();\n  }, [course]);\n\n  const loadCourse = async () => {\n    const { data } = await axios.get(`/api/user/course/${slug}`);\n    setCourse(data);\n  };\n\n  const loadCompletedLessons = async () => {\n    const { data } = await axios.post(`/api/list-completed`, {\n      courseId: course._id,\n    });\n    console.log(\"COMPLETED LESSONS => \", data);\n    setCompletedLessons(data);\n  };\n\n  const markCompleted = async () => {\n    const { data } = await axios.post(`/api/mark-completed`, {\n      courseId: course._id,\n      lessonId: course.lessons[clicked]._id,\n    });\n    console.log(data);\n    setCompletedLessons([...completedLessons, course.lessons[clicked]._id]);\n  };\n\n  const markIncompleted = async () => {\n    try {\n      const { data } = await axios.post(`/api/mark-incomplete`, {\n        courseId: course._id,\n        lessonId: course.lessons[clicked]._id,\n      });\n      console.log(data);\n      const all = completedLessons;\n      console.log(\"ALL => \", all);\n      const index = all.indexOf(course.lessons[clicked]._id);\n      if (index > -1) {\n        all.splice(index, 1);\n        console.log(\"ALL WITHOUT REMOVED => \", all);\n        setCompletedLessons(all);\n        setUpdateState(!updateState);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <StudentRoute>\n      <div className=\"row\">\n        <div style={{ maWidth: 320 }}>\n          <Button\n            onClick={() => setCollapsed(!collapsed)}\n            className=\"text-primary mt-1 btn-block mb-2\"\n          >\n            {createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}{\" \"}\n            {!collapsed && \"Lessons\"}\n          </Button>\n          <Menu\n            defaultSelectedKeys={[clicked]}\n            inlineCollapsed={collapsed}\n            style={{ height: \"80vh\", overflow: \"scroll\" }}\n          >\n            {course.lessons.map((lesson, index) => (\n              <Item\n                onClick={() => setClicked(index)}\n                key={index}\n                icon={<Avatar>{index + 1}</Avatar>}\n              >\n                {lesson.title.substring(0, 30)}{\" \"}\n                {completedLessons.includes(lesson._id) ? (\n                  <CheckCircleFilled\n                    className=\"float-right text-primary ml-2\"\n                    style={{ marginTop: \"13px\" }}\n                  />\n                ) : (\n                  <MinusCircleFilled\n                    className=\"float-right text-danger ml-2\"\n                    style={{ marginTop: \"13px\" }}\n                  />\n                )}\n              </Item>\n            ))}\n          </Menu>\n        </div>\n\n        <div className=\"col\">\n          {clicked !== -1 ? (\n            <>\n              <div className=\"col alert alert-primary square\">\n                <b>{course.lessons[clicked].title.substring(0, 30)}</b>\n                {completedLessons.includes(course.lessons[clicked]._id) ? (\n                  <span\n                    className=\"float-right pointer\"\n                    onClick={markIncompleted}\n                  >\n                    Mark as incomplete\n                  </span>\n                ) : (\n                  <span className=\"float-right pointer\" onClick={markCompleted}>\n                    Mark as completed\n                  </span>\n                )}\n              </div>\n\n              {course.lessons[clicked].video &&\n                course.lessons[clicked].video.Location && (\n                  <>\n                    <div className=\"wrapper\">\n                      <ReactPlayer\n                        className=\"player\"\n                        url={course.lessons[clicked].video.Location}\n                        width=\"100%\"\n                        height=\"100%\"\n                        controls\n                        onEnded={() => markCompleted()}\n                      />\n                    </div>\n                  </>\n                )}\n\n              <ReactMarkdown\n                source={course.lessons[clicked].content}\n                className=\"single-post\"\n              />\n            </>\n          ) : (\n            <div className=\"d-flex justify-content-center p-5\">\n              <div className=\"text-center p-5\">\n                <PlayCircleOutlined className=\"text-primary display-1 p-5\" />\n                <p className=\"lead\">Clcik on the lessons to start learning</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </StudentRoute>\n  );\n};\n\nexport default SingleCourse;\n"]},"metadata":{},"sourceType":"module"}